{"ast":null,"code":"const getEstimate = data => {//data represents complete state from redux store\n  //send req to Google distance matrix api\n};\n\nconst convertCityNameToUsableString = cityName => {\n  let string = '';\n  let cityWordArr = cityName.split(' ');\n\n  if (cityWordArr.length > 1) {} else {\n    return cityName;\n  }\n};\n\nexport default getEstimate;","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/actions/getEstimate.js"],"names":["getEstimate","data","convertCityNameToUsableString","cityName","string","cityWordArr","split","length"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,IAAI,IAAI,CACxB;AAEA;AACH,CAJD;;AAMA,MAAMC,6BAA6B,GAAGC,QAAQ,IAAI;AAC9C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,WAAW,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAlB;;AAEA,MAAID,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B,CAE3B,CAFD,MAEO;AACH,WAAOJ,QAAP;AACH;AACJ,CATD;;AAWA,eAAeH,WAAf","sourcesContent":["const getEstimate = data => {\n    //data represents complete state from redux store\n\n    //send req to Google distance matrix api\n}\n\nconst convertCityNameToUsableString = cityName => {\n    let string = '';\n    let cityWordArr = cityName.split(' ');\n\n    if (cityWordArr.length > 1) {\n\n    } else {\n        return cityName;\n    }\n}\n\nexport default getEstimate;"]},"metadata":{},"sourceType":"module"}