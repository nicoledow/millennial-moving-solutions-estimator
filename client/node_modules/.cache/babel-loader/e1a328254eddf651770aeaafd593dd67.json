{"ast":null,"code":"const getEstimate = data => {//data represents complete state from redux store\n  //send req to Google distance matrix api\n};\n\nconst convertCityNameToUsableString = cityName => {\n  let cityWordArr = cityName.split(' ');\n\n  if (cityWordArr.length > 1) {\n    return cityWordArr.join('+');\n  } else {\n    return cityName;\n  }\n};\n\nexport default getEstimate;","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/actions/getEstimate.js"],"names":["getEstimate","data","convertCityNameToUsableString","cityName","cityWordArr","split","length","join"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,IAAI,IAAI,CACxB;AAEA;AACH,CAJD;;AAMA,MAAMC,6BAA6B,GAAGC,QAAQ,IAAI;AAC9C,MAAIC,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAlB;;AAEA,MAAID,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAOF,WAAW,CAACG,IAAZ,CAAiB,GAAjB,CAAP;AACH,GAFD,MAEO;AACH,WAAOJ,QAAP;AACH;AACJ,CARD;;AAUA,eAAeH,WAAf","sourcesContent":["const getEstimate = data => {\n    //data represents complete state from redux store\n\n    //send req to Google distance matrix api\n}\n\nconst convertCityNameToUsableString = cityName => {\n    let cityWordArr = cityName.split(' ');\n\n    if (cityWordArr.length > 1) {\n        return cityWordArr.join('+');\n    } else {\n        return cityName;\n    }\n}\n\nexport default getEstimate;"]},"metadata":{},"sourceType":"module"}