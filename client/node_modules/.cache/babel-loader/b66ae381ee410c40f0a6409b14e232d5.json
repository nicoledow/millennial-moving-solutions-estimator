{"ast":null,"code":"function getEstimate(data) {\n  //data represents complete state from redux store\n  const originCityString = convertCityNameToUsableString(data.startingCity);\n  const destinationCityString = convertCityNameToUsableString(data.destinationCity); //send req to Google distance matrix api\n\n  fetch(`https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${originCityString},${data.startingState}&destinations=${destinationCityString},${data.destinationState}&key=${api_key}`);\n}\n\nfunction convertCityNameToUsableString(cityName) {\n  let cityWordArr = cityName.split(' ');\n\n  if (cityWordArr.length > 1) {\n    return cityWordArr.join('+');\n  } else {\n    return cityName;\n  }\n}\n\nexport default getEstimate;","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/actions/getEstimate.js"],"names":["getEstimate","data","originCityString","convertCityNameToUsableString","startingCity","destinationCityString","destinationCity","fetch","startingState","destinationState","api_key","cityName","cityWordArr","split","length","join"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACvB;AACA,QAAMC,gBAAgB,GAAGC,6BAA6B,CAACF,IAAI,CAACG,YAAN,CAAtD;AACA,QAAMC,qBAAqB,GAAGF,6BAA6B,CAACF,IAAI,CAACK,eAAN,CAA3D,CAHuB,CAKvB;;AACAC,EAAAA,KAAK,CAAE,mFAAkFL,gBAAiB,IAAGD,IAAI,CAACO,aAAc,iBAAgBH,qBAAsB,IAAGJ,IAAI,CAACQ,gBAAiB,QAAOC,OAAQ,EAAzM,CAAL;AACH;;AAED,SAASP,6BAAT,CAAuCQ,QAAvC,EAAiD;AAC7C,MAAIC,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAlB;;AAEA,MAAID,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAOF,WAAW,CAACG,IAAZ,CAAiB,GAAjB,CAAP;AACH,GAFD,MAEO;AACH,WAAOJ,QAAP;AACH;AACJ;;AAED,eAAeX,WAAf","sourcesContent":["function getEstimate(data) {\n    //data represents complete state from redux store\n    const originCityString = convertCityNameToUsableString(data.startingCity);\n    const destinationCityString = convertCityNameToUsableString(data.destinationCity);\n\n    //send req to Google distance matrix api\n    fetch(`https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${originCityString},${data.startingState}&destinations=${destinationCityString},${data.destinationState}&key=${api_key}`)\n}\n\nfunction convertCityNameToUsableString(cityName) { \n    let cityWordArr = cityName.split(' ');\n\n    if (cityWordArr.length > 1) {\n        return cityWordArr.join('+');\n    } else {\n        return cityName;\n    }\n}\n\nexport default getEstimate;"]},"metadata":{},"sourceType":"module"}